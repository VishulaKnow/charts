/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/config/configOptions.ts":
/*!*************************************!*\
  !*** ./src/config/configOptions.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\nvar configCars = {\r\n    canvas: {\r\n        class: 'outline svg-chart',\r\n        size: {\r\n            width: 960,\r\n            height: 510\r\n        }\r\n    },\r\n    options: {\r\n        type: '2d',\r\n        isSegmented: false,\r\n        axis: {\r\n            keyAxis: {\r\n                position: 'end',\r\n                ticks: {\r\n                    flag: false\r\n                }\r\n            },\r\n            valueAxis: {\r\n                domain: {\r\n                    start: -1,\r\n                    end: -1\r\n                },\r\n                position: 'start',\r\n                ticks: {\r\n                    flag: false\r\n                }\r\n            }\r\n        },\r\n        additionalElements: {\r\n            gridLine: {\r\n                flag: {\r\n                    value: true,\r\n                    key: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            position: 'top'\r\n        },\r\n        orientation: 'vertical',\r\n        charts: [\r\n            {\r\n                title: 'Рост стоимости',\r\n                type: 'line',\r\n                data: {\r\n                    dataSource: 'dataSet',\r\n                    keyField: {\r\n                        name: 'brand',\r\n                        format: 'string'\r\n                    },\r\n                    valueFields: [\r\n                        {\r\n                            name: 'price',\r\n                            format: 'money',\r\n                            title: 'Количество автомобилей на душу населения'\r\n                        },\r\n                        {\r\n                            name: 'count',\r\n                            format: 'integer',\r\n                            title: 'Количество автомобилей на душу населения'\r\n                        }\r\n                    ]\r\n                },\r\n                tooltip: {\r\n                    data: {\r\n                        fields: [\r\n                            {\r\n                                name: 'price',\r\n                                format: 'money'\r\n                            },\r\n                            {\r\n                                name: 'count',\r\n                                format: 'integer'\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                embeddedLabels: 'key'\r\n            }\r\n        ]\r\n    }\r\n    // options: {\r\n    //     type: 'polar',\r\n    //     legend: {\r\n    //         position: 'top'\r\n    //     },\r\n    //     charts: [\r\n    //         {\r\n    //             title: 'Рост стоимости',\r\n    //             type: 'donut',\r\n    //             data: {\r\n    //                 dataSource: 'dataSet_72',\r\n    //                 keyField:  {\r\n    //                     name: 'brand',\r\n    //                     format: 'string'\r\n    //                 },\r\n    //                 valueField: {\r\n    //                     name: 'price',\r\n    //                     format: 'money'\r\n    //                 }\r\n    //             },\r\n    //             tooltip: {\r\n    //                 data: {\r\n    //                     fields: [\r\n    //                         {\r\n    //                             name: 'price',\r\n    //                             format: 'money'\r\n    //                         },\r\n    //                         {\r\n    //                             name: 'count',\r\n    //                             format: 'integer'\r\n    //                         }\r\n    //                     ]\r\n    //                 }\r\n    //             },\r\n    //         }\r\n    //     ]\r\n    // }\r\n};\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (configCars);\r\n\n\n//# sourceURL=webpack://mdt-charts/./src/config/configOptions.ts?");

/***/ }),

/***/ "./src/designer/designerConfigOptions.ts":
/*!***********************************************!*\
  !*** ./src/designer/designerConfigOptions.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\nvar colorsJson = __webpack_require__(/*! ../assets/materialColors.json */ \"./src/assets/materialColors.json\");\r\nvar designerConfig = {\r\n    canvas: {\r\n        axisLabel: {\r\n            maxSize: {\r\n                orthogonal: 20,\r\n                main: 60\r\n            }\r\n        },\r\n        chartBlockMargin: {\r\n            top: 30,\r\n            bottom: 20,\r\n            left: 20,\r\n            right: 20\r\n        },\r\n        legendBlock: {\r\n            maxWidth: 200\r\n        },\r\n        chartOptions: {\r\n            bar: {\r\n                groupMinDistance: 10,\r\n                minBarWidth: 3,\r\n                maxBarWidth: 30,\r\n                barDistance: 5,\r\n                groupMaxDistance: 35\r\n            },\r\n            donut: {\r\n                minPartSize: 10,\r\n                padAngle: 0,\r\n                minThickness: 40,\r\n                maxThickness: 60\r\n            }\r\n        }\r\n    },\r\n    chart: {\r\n        style: {\r\n            palette: colorsJson.colors\r\n        }\r\n    },\r\n    dataFormat: {\r\n        formatters: {\r\n            'integer': function (options, value) { return Intl.NumberFormat().format(value); },\r\n            'decimal': function (options, value) { return Intl.NumberFormat().format(value); },\r\n            'money': function (options, value) { return Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' }).format(value); },\r\n            'date': function (options, value) { return value.getFullYear() + '-' + (value.getMonth() + 1) + '-' + value.getDate() + ' ' + value.getHours() + ':' + value.getMinutes(); },\r\n            'string': function (options, value) { return value; }\r\n        }\r\n    },\r\n    additionalElements: {\r\n        gridLine: {\r\n            flag: {\r\n                value: true,\r\n                key: true\r\n            }\r\n        }\r\n    }\r\n};\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (designerConfig);\r\n\n\n//# sourceURL=webpack://mdt-charts/./src/designer/designerConfigOptions.ts?");

/***/ }),

/***/ "./src/listeners/listeners.ts":
/*!************************************!*\
  !*** ./src/listeners/listeners.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _engine_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine/engine */ \"./src/engine/engine.ts\");\n/* harmony import */ var _model_modelOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../model/modelOptions */ \"./src/model/modelOptions.ts\");\n/* harmony import */ var _style_main_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../style/main.css */ \"./src/style/main.css\");\n/* harmony import */ var _config_configOptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config/configOptions */ \"./src/config/configOptions.ts\");\n/* harmony import */ var _designer_designerConfigOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../designer/designerConfigOptions */ \"./src/designer/designerConfigOptions.ts\");\n\r\n\r\nvar ListenersHelper = /** @class */ (function () {\r\n    function ListenersHelper() {\r\n    }\r\n    ListenersHelper.randInt = function (min, max) {\r\n        return Math.round(Math.random() * (max - min) + min);\r\n    };\r\n    ListenersHelper.getCopy = function (obj) {\r\n        var newObj = {};\r\n        if (typeof obj === 'object') {\r\n            for (var key in obj) {\r\n                if (Array.isArray(obj[key])) {\r\n                    newObj[key] = this.getCopyOfArr(obj[key]);\r\n                }\r\n                else if (typeof obj[key] === 'object') {\r\n                    newObj[key] = this.getCopy(obj[key]);\r\n                }\r\n                else {\r\n                    newObj[key] = obj[key];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return obj;\r\n        }\r\n        return newObj;\r\n    };\r\n    ListenersHelper.getCopyOfArr = function (initial) {\r\n        var _this = this;\r\n        var newArr = [];\r\n        initial.forEach(function (d) { return newArr.push(_this.getCopy(d)); });\r\n        return newArr;\r\n    };\r\n    ListenersHelper.getInputValue = function (selector) {\r\n        return document.querySelector(selector).value;\r\n    };\r\n    ListenersHelper.setInputValue = function (selector, value) {\r\n        document.querySelector(selector).value = value.toString();\r\n    };\r\n    ListenersHelper.setCheckboxValue = function (selector, value) {\r\n        document.querySelector(selector).checked = value;\r\n    };\r\n    return ListenersHelper;\r\n}());\r\nvar Listeners = /** @class */ (function () {\r\n    function Listeners(engine, config, designerConfig, data) {\r\n        this.engine = engine;\r\n        this.config = config;\r\n        this.designerConfig = designerConfig;\r\n        this.data = data;\r\n        this.setControlsValues();\r\n        this.showControlsForNotation(this.config.options.type);\r\n        this.setMainListeners();\r\n        this.setDesignerListeners();\r\n        this.setCommonListeners();\r\n        this.setAxisListeners();\r\n        this.set2DListeners();\r\n    }\r\n    Listeners.prototype.updateFull = function () {\r\n        this.dropAxisDomain(this.config);\r\n        var model = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getUpdatedModel)(this.config, this.data, this.designerConfig);\r\n        var preparedData = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getPreparedData)(model, this.data, this.config);\r\n        this.engine.updateFullBlock(model, preparedData);\r\n    };\r\n    Listeners.prototype.dropAxisDomain = function (config) {\r\n        if (config.options.type === '2d') {\r\n            config.options.axis.valueAxis.domain.end = -1;\r\n            config.options.axis.valueAxis.domain.start = -1;\r\n        }\r\n    };\r\n    Listeners.prototype.showControlsForNotation = function (notationType) {\r\n        if (notationType === '2d') {\r\n            document.querySelector('.block-polar').style.display = 'none';\r\n            document.querySelector('.block-2d').style.display = 'block';\r\n            document.querySelector('.block-axis').style.display = 'block';\r\n        }\r\n        else if (notationType === 'polar') {\r\n            document.querySelector('.block-2d').style.display = 'none';\r\n            document.querySelector('.block-polar').style.display = 'block';\r\n            document.querySelector('.block-axis').style.display = 'none';\r\n        }\r\n        else if (notationType === 'interval') {\r\n            document.querySelector('.block-polar').style.display = 'none';\r\n            document.querySelector('.block-2d').style.display = 'none';\r\n            document.querySelector('.block-axis').style.display = 'block';\r\n        }\r\n    };\r\n    Listeners.prototype.getDataWithRandomValues = function (data, maxRand) {\r\n        if (this.config.options.type === '2d')\r\n            this.config.options.charts.forEach(function (chart) {\r\n                data[chart.data.dataSource].forEach(function (row) {\r\n                    row[chart.data.valueFields[0].name] = ListenersHelper.randInt(0, maxRand);\r\n                });\r\n            });\r\n        else if (this.config.options.type === 'polar') {\r\n            this.config.options.charts.forEach(function (chart) {\r\n                data[chart.data.dataSource].forEach(function (row) {\r\n                    row[chart.data.valueField.name] = ListenersHelper.randInt(0, maxRand);\r\n                });\r\n            });\r\n        }\r\n        return data;\r\n    };\r\n    Listeners.prototype.getDataConfig = function (notationType) {\r\n        if (notationType === '2d') {\r\n            return {\r\n                dataSource: ListenersHelper.getInputValue('#data-size') === 'normal' ? 'dataSet' : 'dataSet_large',\r\n                keyField: {\r\n                    name: 'brand',\r\n                    format: 'string'\r\n                },\r\n                valueFields: [\r\n                    {\r\n                        name: 'price',\r\n                        format: 'money',\r\n                        title: 'Цена автомобилей на рынке'\r\n                    },\r\n                    {\r\n                        name: 'count',\r\n                        format: 'integer',\r\n                        title: 'Количество автомобилей на душу населения'\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n        else if (notationType === 'interval') {\r\n            return {\r\n                dataSource: 'dataSet_gantt',\r\n                keyField: {\r\n                    name: 'task',\r\n                    format: 'string'\r\n                },\r\n                valueField1: {\r\n                    name: 'start',\r\n                    format: 'date'\r\n                },\r\n                valueField2: {\r\n                    name: 'end',\r\n                    format: 'date'\r\n                }\r\n            };\r\n        }\r\n        else if (notationType === 'polar') {\r\n            return {\r\n                dataSource: ListenersHelper.getInputValue('#data-size') === 'normal' ? 'dataSet' : 'dataSet_large',\r\n                keyField: {\r\n                    name: 'brand',\r\n                    format: 'string'\r\n                },\r\n                valueField: {\r\n                    name: 'price',\r\n                    format: 'money'\r\n                }\r\n            };\r\n        }\r\n    };\r\n    Listeners.prototype.getTooltipConfig = function (notationType) {\r\n        if (notationType === '2d' || notationType === 'polar') {\r\n            return {\r\n                data: {\r\n                    fields: [\r\n                        {\r\n                            name: 'price',\r\n                            format: 'money'\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n        }\r\n        else if (notationType === 'interval') {\r\n            return {\r\n                data: {\r\n                    fields: [\r\n                        {\r\n                            format: 'date',\r\n                            name: 'start'\r\n                        },\r\n                        {\r\n                            format: 'date',\r\n                            name: 'end'\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n        }\r\n    };\r\n    Listeners.prototype.changeConfigOptions = function (notationType) {\r\n        if (notationType === '2d') {\r\n            var options = {\r\n                legend: this.config.options.legend,\r\n                isSegmented: false,\r\n                orientation: ListenersHelper.getInputValue('#chart-orient'),\r\n                type: notationType,\r\n                charts: [\r\n                    {\r\n                        data: this.getDataConfig(notationType),\r\n                        title: this.config.options.charts[0].title,\r\n                        tooltip: this.getTooltipConfig(notationType),\r\n                        type: ListenersHelper.getInputValue('#chart-2d-type') === 'barLine' ? 'bar' : ListenersHelper.getInputValue('#chart-2d-type'),\r\n                        embeddedLabels: 'none'\r\n                    }\r\n                ],\r\n                axis: {\r\n                    keyAxis: {\r\n                        position: ListenersHelper.getInputValue('#key-axis-orient'),\r\n                        ticks: {\r\n                            flag: false\r\n                        }\r\n                    },\r\n                    valueAxis: {\r\n                        domain: {\r\n                            start: -1,\r\n                            end: -1\r\n                        },\r\n                        position: ListenersHelper.getInputValue('#value-axis-orient'),\r\n                        ticks: {\r\n                            flag: false\r\n                        }\r\n                    }\r\n                },\r\n                additionalElements: {\r\n                    gridLine: {\r\n                        flag: {\r\n                            value: true,\r\n                            key: false\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            this.config.options = options;\r\n        }\r\n        else if (notationType === 'polar') {\r\n            var options = {\r\n                legend: this.config.options.legend,\r\n                type: notationType,\r\n                charts: [\r\n                    {\r\n                        data: this.getDataConfig(notationType),\r\n                        title: this.config.options.charts[0].title,\r\n                        tooltip: this.getTooltipConfig(notationType),\r\n                        type: 'donut'\r\n                    }\r\n                ]\r\n            };\r\n            this.config.options = options;\r\n        }\r\n        else if (notationType === 'interval') {\r\n            var options = {\r\n                legend: this.config.options.legend,\r\n                orientation: ListenersHelper.getInputValue('#chart-orient'),\r\n                type: notationType,\r\n                charts: [\r\n                    {\r\n                        data: this.getDataConfig(notationType),\r\n                        title: this.config.options.charts[0].title,\r\n                        tooltip: this.getTooltipConfig(notationType),\r\n                        type: 'gantt'\r\n                    }\r\n                ],\r\n                axis: {\r\n                    keyAxis: {\r\n                        position: ListenersHelper.getInputValue('#key-axis-orient'),\r\n                        ticks: {\r\n                            flag: false\r\n                        }\r\n                    },\r\n                    valueAxis: {\r\n                        position: ListenersHelper.getInputValue('#value-axis-orient'),\r\n                        ticks: {\r\n                            flag: false\r\n                        }\r\n                    }\r\n                },\r\n                additionalElements: {\r\n                    gridLine: {\r\n                        flag: {\r\n                            value: true,\r\n                            key: false\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            this.config.options = options;\r\n        }\r\n        this.updateFull();\r\n    };\r\n    Listeners.prototype.change2DChartConfig = function (chartType) {\r\n        var config = this.config;\r\n        if (chartType === 'barLine' && config.options.charts.length === 1) {\r\n            config.options.charts.push(ListenersHelper.getCopy(config.options.charts[0]));\r\n            config.options.charts[0].type = 'bar';\r\n            config.options.charts[1].type = 'line';\r\n            config.options.charts[1].data.dataSource = config.options.charts[0].data.dataSource + '2';\r\n        }\r\n        else if (chartType === 'barLine' && config.options.charts.length === 2) {\r\n            config.options.charts[0].type = 'bar';\r\n            config.options.charts[1].type = 'line';\r\n            config.options.charts[1].data.dataSource = config.options.charts[0].data.dataSource + '2';\r\n        }\r\n        else if (chartType !== 'barLine') {\r\n            config.options.charts.splice(1, 1);\r\n            config.options.charts[0].type = chartType;\r\n        }\r\n    };\r\n    Listeners.prototype.setMainListeners = function () {\r\n        var thisClass = this;\r\n        document.querySelector('#notation').addEventListener('change', function () {\r\n            thisClass.showControlsForNotation(this.value);\r\n            thisClass.changeConfigOptions(this.value);\r\n            thisClass.setControlsValues();\r\n        });\r\n        document.querySelector('#block-width').addEventListener('input', function (e) {\r\n            thisClass.config.canvas.size.width = parseFloat(ListenersHelper.getInputValue('#block-width')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#block-height').addEventListener('input', function (e) {\r\n            thisClass.config.canvas.size.height = parseFloat(ListenersHelper.getInputValue('#block-height')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#wrapper-border').addEventListener('change', function () {\r\n            if (this.checked) {\r\n                thisClass.config.canvas.class += ' outline';\r\n            }\r\n            else {\r\n                thisClass.config.canvas.class = thisClass.config.canvas.class.replace('outline', '');\r\n            }\r\n            thisClass.updateFull();\r\n        });\r\n    };\r\n    Listeners.prototype.setDesignerListeners = function () {\r\n        var thisClass = this;\r\n        document.querySelector('#axis-label-width').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.axisLabel.maxSize.main = parseFloat(ListenersHelper.getInputValue('#axis-label-width'));\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#chart-block-margin-top').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartBlockMargin.top = parseFloat(ListenersHelper.getInputValue('#chart-block-margin-top')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#chart-block-margin-bottom').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartBlockMargin.bottom = parseFloat(ListenersHelper.getInputValue('#chart-block-margin-bottom')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#chart-block-margin-left').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartBlockMargin.left = parseFloat(ListenersHelper.getInputValue('#chart-block-margin-left')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#chart-block-margin-right').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartBlockMargin.right = parseFloat(ListenersHelper.getInputValue('#chart-block-margin-right')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#bar-distance').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.bar.barDistance = parseFloat(ListenersHelper.getInputValue('#bar-distance')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#min-bar-group-distance').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.bar.groupMinDistance = parseFloat(ListenersHelper.getInputValue('#min-bar-group-distance'));\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#max-bar-group-distance').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.bar.groupMaxDistance = parseFloat(ListenersHelper.getInputValue('#max-bar-group-distance'));\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#min-bar-size').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.bar.minBarWidth = parseFloat(ListenersHelper.getInputValue('#min-bar-size')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#max-bar-size').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.bar.maxBarWidth = parseFloat(ListenersHelper.getInputValue('#max-bar-size')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#min-donut-part-size').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.donut.minPartSize = parseFloat(ListenersHelper.getInputValue('#min-donut-part-size')) || 0;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('.btn-base-color').addEventListener('click', function () {\r\n            // thisClass.designerConfig.chart.style.palette[0] = color(ListenersHelper.getInputValue('#base-color'));\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#designer-key-grid').addEventListener('change', function () {\r\n            thisClass.designerConfig.additionalElements.gridLine.flag.key = this.checked;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#designer-value-grid').addEventListener('change', function () {\r\n            thisClass.designerConfig.additionalElements.gridLine.flag.value = this.checked;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#pad-angle').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.donut.padAngle = parseFloat(ListenersHelper.getInputValue('#pad-angle'));\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#donut-min-thickness').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.donut.minThickness = parseFloat(ListenersHelper.getInputValue('#donut-min-thickness'));\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('#donut-max-thickness').addEventListener('input', function () {\r\n            thisClass.designerConfig.canvas.chartOptions.donut.maxThickness = parseFloat(ListenersHelper.getInputValue('#donut-max-thickness'));\r\n            thisClass.updateFull();\r\n        });\r\n    };\r\n    Listeners.prototype.setCommonListeners = function () {\r\n        var thisClass = this;\r\n        var config = this.config;\r\n        document.querySelector('#data-size').addEventListener('change', function () {\r\n            var _this = this;\r\n            if (config.options.type === '2d' || config.options.type === 'polar') {\r\n                config.options.charts.forEach(function (chart, index) {\r\n                    chart.data.dataSource = _this.value === 'normal'\r\n                        ? 'dataSet' + (index === 0 ? '' : index + 1)\r\n                        : 'dataSet_large' + (index === 0 ? '' : index + 1);\r\n                });\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('#legend').addEventListener('change', function () {\r\n            config.options.legend.position = this.value;\r\n            thisClass.updateFull();\r\n        });\r\n        document.querySelector('.btn-random').addEventListener('click', function () {\r\n            if (config.options.type === '2d' || config.options.type === 'polar') {\r\n                var max = parseInt(ListenersHelper.getInputValue('#max-random-value')) || 120;\r\n                var copy = ListenersHelper.getCopy(thisClass.data);\r\n                var newData = thisClass.getDataWithRandomValues(copy, max);\r\n                if (config.options.type === '2d') {\r\n                    config.options.axis.valueAxis.domain.start = -1;\r\n                    config.options.axis.valueAxis.domain.end = max;\r\n                }\r\n                var model_1 = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getUpdatedModel)(thisClass.config, newData, thisClass.designerConfig);\r\n                var preparedData = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getPreparedData)(model_1, newData, config);\r\n                thisClass.engine.updateFullBlock(model_1, preparedData);\r\n            }\r\n        });\r\n        document.querySelector('#max-random-value').addEventListener('keydown', function (e) {\r\n            if (e.code === 'Enter' && (config.options.type === '2d' || config.options.type === 'polar')) {\r\n                var max = parseInt(ListenersHelper.getInputValue('#max-random-value')) || 120;\r\n                var copy = ListenersHelper.getCopy(thisClass.data);\r\n                var newData = thisClass.getDataWithRandomValues(copy, max);\r\n                if (config.options.type === '2d') {\r\n                    config.options.axis.valueAxis.domain.start = -1;\r\n                    config.options.axis.valueAxis.domain.end = max;\r\n                }\r\n                var model_2 = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getUpdatedModel)(thisClass.config, newData, thisClass.designerConfig);\r\n                var preparedData = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getPreparedData)(model_2, newData, config);\r\n                thisClass.engine.updateFullBlock(model_2, preparedData);\r\n            }\r\n        });\r\n    };\r\n    Listeners.prototype.set2DListeners = function () {\r\n        var thisClass = this;\r\n        var config = this.config;\r\n        document.querySelector('#chart-2d-type').addEventListener('change', function () {\r\n            if (config.options.type === '2d') {\r\n                thisClass.change2DChartConfig(this.value);\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('#embedded-labels').addEventListener('change', function () {\r\n            var _this = this;\r\n            if (config.options.type === '2d') {\r\n                config.options.charts.forEach(function (chart) { return chart.embeddedLabels = _this.value; });\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('.btn-domain').addEventListener('click', function () {\r\n            if (config.options.type === '2d') {\r\n                var start = ListenersHelper.getInputValue('#domain-start');\r\n                var end = ListenersHelper.getInputValue('#domain-end');\r\n                config.options.axis.valueAxis.domain.start = parseInt(start) || -1;\r\n                config.options.axis.valueAxis.domain.end = parseInt(end) || -1;\r\n                thisClass.engine.updateValueAxis((0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getUpdatedModel)(thisClass.config, thisClass.data, thisClass.designerConfig), thisClass.data);\r\n            }\r\n        });\r\n        document.querySelector('#domain-start').addEventListener('keydown', function (e) {\r\n            if (e.code === 'Enter') {\r\n                if (config.options.type === '2d') {\r\n                    var start = ListenersHelper.getInputValue('#domain-start');\r\n                    var end = ListenersHelper.getInputValue('#domain-end');\r\n                    config.options.axis.valueAxis.domain.start = parseInt(start) || -1;\r\n                    config.options.axis.valueAxis.domain.end = parseInt(end) || -1;\r\n                    thisClass.engine.updateValueAxis((0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getUpdatedModel)(thisClass.config, thisClass.data, thisClass.designerConfig), thisClass.data);\r\n                }\r\n            }\r\n        });\r\n        document.querySelector('#domain-end').addEventListener('keydown', function (e) {\r\n            if (e.code === 'Enter') {\r\n                if (config.options.type === '2d') {\r\n                    var start = ListenersHelper.getInputValue('#domain-start');\r\n                    var end = ListenersHelper.getInputValue('#domain-end');\r\n                    config.options.axis.valueAxis.domain.start = parseInt(start) || -1;\r\n                    config.options.axis.valueAxis.domain.end = parseInt(end) || -1;\r\n                    thisClass.engine.updateValueAxis((0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getUpdatedModel)(thisClass.config, thisClass.data, thisClass.designerConfig), thisClass.data);\r\n                }\r\n            }\r\n        });\r\n        document.querySelector('#is-segmented').addEventListener('change', function () {\r\n            if (config.options.type === '2d') {\r\n                config.options.isSegmented = this.checked;\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n    };\r\n    Listeners.prototype.setAxisListeners = function () {\r\n        var thisClass = this;\r\n        var config = this.config;\r\n        document.querySelector('#chart-orient').addEventListener('change', function () {\r\n            if (config.options.type === '2d' || config.options.type === 'interval') {\r\n                config.options.orientation = this.value;\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('#key-axis-orient').addEventListener('change', function () {\r\n            if (config.options.type === '2d' || config.options.type === 'interval') {\r\n                config.options.axis.keyAxis.position = this.value;\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('#value-axis-orient').addEventListener('change', function () {\r\n            if (config.options.type === '2d' || config.options.type === 'interval') {\r\n                config.options.axis.valueAxis.position = this.value;\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('#config-key-grid').addEventListener('change', function () {\r\n            if (config.options.type === '2d' || config.options.type === 'interval') {\r\n                config.options.additionalElements.gridLine.flag.key = this.checked;\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('#config-value-grid').addEventListener('change', function () {\r\n            if (config.options.type === '2d' || config.options.type === 'interval') {\r\n                config.options.additionalElements.gridLine.flag.value = this.checked;\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('#config-tick-key').addEventListener('change', function () {\r\n            if (config.options.type === '2d' || config.options.type === 'interval') {\r\n                config.options.axis.keyAxis.ticks.flag = this.checked;\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n        document.querySelector('#config-tick-value').addEventListener('change', function () {\r\n            if (config.options.type === '2d' || config.options.type === 'interval') {\r\n                config.options.axis.valueAxis.ticks.flag = this.checked;\r\n                thisClass.updateFull();\r\n            }\r\n        });\r\n    };\r\n    Listeners.prototype.setControlsValues = function () {\r\n        var config = this.config;\r\n        var designerConfig = this.designerConfig;\r\n        ListenersHelper.setInputValue('#notation', config.options.type);\r\n        ListenersHelper.setInputValue('#block-width', config.canvas.size.width);\r\n        ListenersHelper.setInputValue('#block-height', config.canvas.size.height);\r\n        ListenersHelper.setCheckboxValue('#wrapper-border', config.canvas.class.includes('outline'));\r\n        ListenersHelper.setInputValue('#legend', config.options.legend.position);\r\n        ListenersHelper.setInputValue('#data-size', config.options.charts[0].data.dataSource.includes('large') ? 'large' : 'normal');\r\n        ListenersHelper.setInputValue('#axis-label-width', designerConfig.canvas.axisLabel.maxSize.main);\r\n        ListenersHelper.setInputValue('#chart-block-margin-top', designerConfig.canvas.chartBlockMargin.top);\r\n        ListenersHelper.setInputValue('#chart-block-margin-bottom', designerConfig.canvas.chartBlockMargin.bottom);\r\n        ListenersHelper.setInputValue('#chart-block-margin-left', designerConfig.canvas.chartBlockMargin.left);\r\n        ListenersHelper.setInputValue('#chart-block-margin-right', designerConfig.canvas.chartBlockMargin.right);\r\n        ListenersHelper.setInputValue('#min-bar-group-distance', designerConfig.canvas.chartOptions.bar.groupMinDistance);\r\n        ListenersHelper.setInputValue('#max-bar-group-distance', designerConfig.canvas.chartOptions.bar.groupMaxDistance);\r\n        ListenersHelper.setInputValue('#bar-distance', designerConfig.canvas.chartOptions.bar.barDistance);\r\n        ListenersHelper.setInputValue('#min-bar-size', designerConfig.canvas.chartOptions.bar.minBarWidth);\r\n        ListenersHelper.setInputValue('#max-bar-size', designerConfig.canvas.chartOptions.bar.maxBarWidth);\r\n        ListenersHelper.setInputValue('#min-donut-part-size', designerConfig.canvas.chartOptions.donut.minPartSize);\r\n        // ListenersHelper.setInputValue('#base-color', designerConfig.chart.style.palette[0]);\r\n        ListenersHelper.setCheckboxValue('#designer-key-grid', designerConfig.additionalElements.gridLine.flag.key);\r\n        ListenersHelper.setCheckboxValue('#designer-value-grid', designerConfig.additionalElements.gridLine.flag.value);\r\n        ListenersHelper.setInputValue('#pad-angle', designerConfig.canvas.chartOptions.donut.padAngle);\r\n        ListenersHelper.setInputValue('#donut-min-thickness', designerConfig.canvas.chartOptions.donut.minThickness);\r\n        ListenersHelper.setInputValue('#donut-max-thickness', designerConfig.canvas.chartOptions.donut.maxThickness);\r\n        if (config.options.type === '2d') {\r\n            ListenersHelper.setInputValue('#chart-2d-type', config.options.charts[0].type);\r\n            ListenersHelper.setInputValue('#chart-orient', config.options.orientation);\r\n            ListenersHelper.setInputValue('#key-axis-orient', config.options.axis.keyAxis.position);\r\n            ListenersHelper.setInputValue('#value-axis-orient', config.options.axis.valueAxis.position);\r\n            ListenersHelper.setCheckboxValue('#config-value-grid', config.options.additionalElements.gridLine.flag.value);\r\n            ListenersHelper.setCheckboxValue('#config-key-grid', config.options.additionalElements.gridLine.flag.key);\r\n            ListenersHelper.setCheckboxValue('#config-tick-key', config.options.axis.keyAxis.ticks.flag);\r\n            ListenersHelper.setCheckboxValue('#config-tick-value', config.options.axis.valueAxis.ticks.flag);\r\n            ListenersHelper.setCheckboxValue('#is-segmented', config.options.isSegmented);\r\n            ListenersHelper.setInputValue('#embedded-labels', config.options.charts[0].embeddedLabels);\r\n        }\r\n        else if (config.options.type === 'polar') {\r\n            ListenersHelper.setInputValue('#chart-polar-type', config.options.charts[0].type);\r\n        }\r\n    };\r\n    return Listeners;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Listeners);\r\n\r\n\r\n\r\nvar data = __webpack_require__(/*! ../assets/dataSet.json */ \"./src/assets/dataSet.json\");\r\nvar model = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.assembleModel)(_config_configOptions__WEBPACK_IMPORTED_MODULE_3__.default, data, _designer_designerConfigOptions__WEBPACK_IMPORTED_MODULE_4__.default);\r\nvar engine = new _engine_engine__WEBPACK_IMPORTED_MODULE_0__.default();\r\nengine.render(model, (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getPreparedData)(model, data, _config_configOptions__WEBPACK_IMPORTED_MODULE_3__.default), document.querySelector('.main-wrapper'));\r\nnew Listeners(engine, _config_configOptions__WEBPACK_IMPORTED_MODULE_3__.default, _designer_designerConfigOptions__WEBPACK_IMPORTED_MODULE_4__.default, data);\r\nvar config3 = __webpack_require__(/*! ../config/configTest2D.json */ \"./src/config/configTest2D.json\");\r\nvar model3 = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.assembleModel)(config3, data, _designer_designerConfigOptions__WEBPACK_IMPORTED_MODULE_4__.default);\r\nvar engine3 = new _engine_engine__WEBPACK_IMPORTED_MODULE_0__.default();\r\nengine3.render(model3, (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getPreparedData)(model3, data, config3), document.querySelector('.main-wrapper2'));\r\nvar config2 = __webpack_require__(/*! ../config/configTestPolar.json */ \"./src/config/configTestPolar.json\");\r\nvar model2 = (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.assembleModel)(config2, data, _designer_designerConfigOptions__WEBPACK_IMPORTED_MODULE_4__.default);\r\nvar engine2 = new _engine_engine__WEBPACK_IMPORTED_MODULE_0__.default();\r\nengine2.render(model2, (0,_model_modelOptions__WEBPACK_IMPORTED_MODULE_1__.getPreparedData)(model2, data, config2), document.querySelector('.main-wrapper2'));\r\n\n\n//# sourceURL=webpack://mdt-charts/./src/listeners/listeners.ts?");

/***/ }),

/***/ "./src/assets/dataSet.json":
/*!*********************************!*\
  !*** ./src/assets/dataSet.json ***!
  \*********************************/
/***/ ((module) => {

eval("module.exports = JSON.parse(\"{\\\"dataSet\\\":[{\\\"brand\\\":\\\"BMW\\\",\\\"price\\\":10,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN\\\",\\\"price\\\":115,\\\"count\\\":6},{\\\"brand\\\":\\\"DODGE\\\",\\\"price\\\":115,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA\\\",\\\"price\\\":120,\\\"count\\\":20}],\\\"dataSet2\\\":[{\\\"brand\\\":\\\"BMW\\\",\\\"price\\\":100,\\\"count\\\":5},{\\\"brand\\\":\\\"LADA\\\",\\\"price\\\":25,\\\"count\\\":2},{\\\"brand\\\":\\\"MERCEDES\\\",\\\"price\\\":28,\\\"count\\\":0},{\\\"brand\\\":\\\"AUDI\\\",\\\"price\\\":16,\\\"count\\\":4},{\\\"brand\\\":\\\"VOLKSWAGEN\\\",\\\"price\\\":85,\\\"count\\\":13},{\\\"brand\\\":\\\"DODGE\\\",\\\"price\\\":100,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB\\\",\\\"price\\\":100,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA\\\",\\\"price\\\":15,\\\"count\\\":11},{\\\"brand\\\":\\\"TOYOTA\\\",\\\"price\\\":60,\\\"count\\\":0}],\\\"dataSet_large\\\":[{\\\"brand\\\":\\\"BMW asdasd asd as qewqeqw qwe qweqwe asd asdasd as d as da sdasdasdas da sd asd\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA fas df sad f asd fa sdf asd fadsfasdf sadf asd fa sdfasdf asd f asdf asd fasdf\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES a sd a sd as d asd\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN as dasdasdasd sad asdasd\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA\\\",\\\"price\\\":20,\\\"count\\\":20},{\\\"brand\\\":\\\"TOYOTA\\\",\\\"price\\\":115,\\\"count\\\":30},{\\\"brand\\\":\\\"BMW2\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA2\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES2 as d as d asd as d as dasd\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI2\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN2\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE2\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB2\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA2\\\",\\\"price\\\":20,\\\"count\\\":7},{\\\"brand\\\":\\\"TOYOTA2\\\",\\\"price\\\":115,\\\"count\\\":8}],\\\"dataSet_large2\\\":[{\\\"brand\\\":\\\"BMW\\\",\\\"price\\\":100,\\\"count\\\":5},{\\\"brand\\\":\\\"LADA\\\",\\\"price\\\":25,\\\"count\\\":2},{\\\"brand\\\":\\\"MERCEDES\\\",\\\"price\\\":28,\\\"count\\\":0},{\\\"brand\\\":\\\"AUDI\\\",\\\"price\\\":20,\\\"count\\\":4},{\\\"brand\\\":\\\"VOLKSWAGEN\\\",\\\"price\\\":85,\\\"count\\\":3},{\\\"brand\\\":\\\"DODGE\\\",\\\"price\\\":100,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB\\\",\\\"price\\\":100,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA\\\",\\\"price\\\":15,\\\"count\\\":11},{\\\"brand\\\":\\\"TOYOTA\\\",\\\"price\\\":34,\\\"count\\\":0},{\\\"brand\\\":\\\"BMW2\\\",\\\"price\\\":100,\\\"count\\\":5},{\\\"brand\\\":\\\"LADA2\\\",\\\"price\\\":25,\\\"count\\\":2},{\\\"brand\\\":\\\"MERCEDES2\\\",\\\"price\\\":28,\\\"count\\\":0},{\\\"brand\\\":\\\"AUDI2\\\",\\\"price\\\":16,\\\"count\\\":4},{\\\"brand\\\":\\\"VOLKSWAGEN2\\\",\\\"price\\\":85,\\\"count\\\":3},{\\\"brand\\\":\\\"DODGE2\\\",\\\"price\\\":150,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB2\\\",\\\"price\\\":150,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA2\\\",\\\"price\\\":15,\\\"count\\\":11},{\\\"brand\\\":\\\"TOYOTA2\\\",\\\"price\\\":180,\\\"count\\\":0}],\\\"dataSet_data\\\":[{\\\"SortOrder\\\":202007,\\\"EventCost\\\":19000,\\\"AlcoholCost\\\":8000,\\\"MonthYear\\\":\\\"Jul 20\\\"},{\\\"SortOrder\\\":202008,\\\"EventCost\\\":166000,\\\"AlcoholCost\\\":31000,\\\"MonthYear\\\":\\\"Aug 20\\\"},{\\\"SortOrder\\\":202010,\\\"EventCost\\\":17000,\\\"AlcoholCost\\\":0,\\\"MonthYear\\\":\\\"Oct 20\\\"},{\\\"SortOrder\\\":202011,\\\"EventCost\\\":15000,\\\"AlcoholCost\\\":0,\\\"MonthYear\\\":\\\"Nov 20\\\"},{\\\"SortOrder\\\":202012,\\\"EventCost\\\":317007,\\\"AlcoholCost\\\":36000,\\\"MonthYear\\\":\\\"Dec 20\\\"},{\\\"SortOrder\\\":202101,\\\"EventCost\\\":4500,\\\"AlcoholCost\\\":0,\\\"MonthYear\\\":\\\"Jan 21\\\"},{\\\"SortOrder\\\":202102,\\\"EventCost\\\":200000,\\\"AlcoholCost\\\":0,\\\"MonthYear\\\":\\\"Feb 21\\\"}],\\\"dataSet_data2\\\":[{\\\"SortOrder\\\":202007,\\\"EventCost\\\":19000,\\\"AlcoholCost\\\":8000,\\\"MonthYear\\\":\\\"Jul 20\\\"},{\\\"SortOrder\\\":202008,\\\"EventCost\\\":16600,\\\"AlcoholCost\\\":31000,\\\"MonthYear\\\":\\\"Aug 20\\\"},{\\\"SortOrder\\\":202010,\\\"EventCost\\\":170000,\\\"AlcoholCost\\\":0,\\\"MonthYear\\\":\\\"Oct 20\\\"},{\\\"SortOrder\\\":202011,\\\"EventCost\\\":12000,\\\"AlcoholCost\\\":0,\\\"MonthYear\\\":\\\"Nov 20\\\"},{\\\"SortOrder\\\":202012,\\\"EventCost\\\":307007,\\\"AlcoholCost\\\":36000,\\\"MonthYear\\\":\\\"Dec 20\\\"},{\\\"SortOrder\\\":202101,\\\"EventCost\\\":3000,\\\"AlcoholCost\\\":0,\\\"MonthYear\\\":\\\"Jan 21\\\"},{\\\"SortOrder\\\":202102,\\\"EventCost\\\":2000,\\\"AlcoholCost\\\":0,\\\"MonthYear\\\":\\\"Feb 21\\\"}],\\\"dataSet_gantt2\\\":[{\\\"task\\\":\\\"task1\\\",\\\"start\\\":\\\"2020-12-12 06:30\\\",\\\"end\\\":\\\"2020-12-12 18:00\\\"},{\\\"task\\\":\\\"task1\\\",\\\"start\\\":\\\"2020-12-11 12:00\\\",\\\"end\\\":\\\"2020-12-11 18:30\\\"},{\\\"task\\\":\\\"task4\\\",\\\"start\\\":\\\"2020-12-13 11:00\\\",\\\"end\\\":\\\"2020-12-13 23:40\\\"},{\\\"task\\\":\\\"task4\\\",\\\"start\\\":\\\"2020-12-14 12:20\\\",\\\"end\\\":\\\"2020-12-14 19:40\\\"}],\\\"dataSet_gantt\\\":[{\\\"id\\\":2,\\\"task\\\":\\\"task2\\\",\\\"start\\\":\\\"2020-12-03\\\",\\\"end\\\":\\\"2020-12-05\\\",\\\"next_task_id\\\":2},{\\\"id\\\":3,\\\"task\\\":\\\"task3\\\",\\\"start\\\":\\\"2020-12-10\\\",\\\"end\\\":\\\"2020-12-20\\\",\\\"next_task_id\\\":3},{\\\"id\\\":4,\\\"task\\\":\\\"task4\\\",\\\"start\\\":\\\"2020-12-01\\\",\\\"end\\\":\\\"2020-12-11\\\",\\\"next_task_id\\\":4},{\\\"id\\\":1,\\\"task\\\":\\\"task1\\\",\\\"start\\\":\\\"2020-12-12\\\",\\\"end\\\":\\\"2020-12-30\\\",\\\"next_task_id\\\":5},{\\\"id\\\":5,\\\"task\\\":\\\"task5\\\",\\\"start\\\":\\\"2020-12-20\\\",\\\"end\\\":\\\"2020-12-31\\\",\\\"next_task_id\\\":6},{\\\"id\\\":6,\\\"task\\\":\\\"task6\\\",\\\"start\\\":\\\"2020-12-12\\\",\\\"end\\\":\\\"2020-12-16\\\",\\\"next_task_id\\\":1}],\\\"dataSet_poor\\\":[{\\\"brand\\\":\\\"BMW\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES\\\",\\\"price\\\":15,\\\"count\\\":12}],\\\"dataSet_poor2\\\":[{\\\"brand\\\":\\\"BMW\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES\\\",\\\"price\\\":15,\\\"count\\\":12}],\\\"dataSet_segmented\\\":[{\\\"model\\\":\\\"M3\\\",\\\"brand\\\":\\\"BMW\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"model\\\":\\\"M4\\\",\\\"brand\\\":\\\"BMW\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"model\\\":\\\"V3\\\",\\\"brand\\\":\\\"LADA\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"model\\\":\\\"V4\\\",\\\"brand\\\":\\\"LADA\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"model\\\":\\\"M4\\\",\\\"brand\\\":\\\"MERCEDES\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"model\\\":\\\"M14\\\",\\\"brand\\\":\\\"MERCEDES\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"model\\\":\\\"A5\\\",\\\"brand\\\":\\\"AUDI\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"model\\\":\\\"A6\\\",\\\"brand\\\":\\\"AUDI\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"model\\\":\\\"M7\\\",\\\"brand\\\":\\\"VOLKSWAGEN\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"model\\\":\\\"M9\\\",\\\"brand\\\":\\\"VOLKSWAGEN\\\",\\\"price\\\":40,\\\"count\\\":10}],\\\"dataSet_72\\\":[{\\\"brand\\\":\\\"BMW\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA\\\",\\\"price\\\":115,\\\"count\\\":1},{\\\"brand\\\":\\\"BMW2\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA2\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES2\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI2\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN2\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE2\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB2\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA2\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA2\\\",\\\"price\\\":115,\\\"count\\\":1},{\\\"brand\\\":\\\"BMW3\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA3\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES3\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI3\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN3\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE3\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB3\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA3\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA3\\\",\\\"price\\\":115,\\\"count\\\":1},{\\\"brand\\\":\\\"BMW4\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA4\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES4\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI4\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN4\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE4\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB4\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA4\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA4\\\",\\\"price\\\":115,\\\"count\\\":1},{\\\"brand\\\":\\\"BMW5\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA5\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES5\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI5\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN5\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE5\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB5\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA5\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA5\\\",\\\"price\\\":115,\\\"count\\\":1},{\\\"brand\\\":\\\"BMW6\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA6\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES6\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI6\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN6\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE6\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB6\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA6\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA6\\\",\\\"price\\\":115,\\\"count\\\":1},{\\\"brand\\\":\\\"BMW7\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA7\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES7\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI7\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN7\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE7\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB7\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA7\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA7\\\",\\\"price\\\":115,\\\"count\\\":1},{\\\"brand\\\":\\\"BMW8\\\",\\\"price\\\":120,\\\"count\\\":12},{\\\"brand\\\":\\\"LADA8\\\",\\\"price\\\":50,\\\"count\\\":10},{\\\"brand\\\":\\\"MERCEDES8\\\",\\\"price\\\":15,\\\"count\\\":12},{\\\"brand\\\":\\\"AUDI8\\\",\\\"price\\\":20,\\\"count\\\":5},{\\\"brand\\\":\\\"VOLKSWAGEN8\\\",\\\"price\\\":40,\\\"count\\\":10},{\\\"brand\\\":\\\"DODGE8\\\",\\\"price\\\":70,\\\"count\\\":4},{\\\"brand\\\":\\\"SAAB8\\\",\\\"price\\\":50,\\\"count\\\":11},{\\\"brand\\\":\\\"HONDA8\\\",\\\"price\\\":20,\\\"count\\\":2},{\\\"brand\\\":\\\"TOYOTA8\\\",\\\"price\\\":115,\\\"count\\\":1}]}\");\n\n//# sourceURL=webpack://mdt-charts/./src/assets/dataSet.json?");

/***/ }),

/***/ "./src/assets/materialColors.json":
/*!****************************************!*\
  !*** ./src/assets/materialColors.json ***!
  \****************************************/
/***/ ((module) => {

eval("module.exports = JSON.parse(\"{\\\"colors\\\":[{\\\"red-50\\\":\\\"#ffebee\\\",\\\"red-100\\\":\\\"#ffcdd2\\\",\\\"red-200\\\":\\\"#ef9a9a\\\",\\\"red-300\\\":\\\"#e57373\\\",\\\"red-400\\\":\\\"#ef5350\\\",\\\"red-500\\\":\\\"#f44336\\\",\\\"red-600\\\":\\\"#e53935\\\",\\\"red-700\\\":\\\"#d32f2f\\\",\\\"red-800\\\":\\\"#c62828\\\",\\\"red-900\\\":\\\"#b71c1c\\\",\\\"red-a100\\\":\\\"#ff8a80\\\",\\\"red-a200\\\":\\\"#ff5252\\\",\\\"red-a400\\\":\\\"#ff1744\\\",\\\"red-a700\\\":\\\"#d50000\\\"},{\\\"pink-50\\\":\\\"#fce4ec\\\",\\\"pink-100\\\":\\\"#f8bbd0\\\",\\\"pink-200\\\":\\\"#f48fb1\\\",\\\"pink-300\\\":\\\"#f06292\\\",\\\"pink-400\\\":\\\"#ec407a\\\",\\\"pink-500\\\":\\\"#e91e63\\\",\\\"pink-600\\\":\\\"#d81b60\\\",\\\"pink-700\\\":\\\"#c2185b\\\",\\\"pink-800\\\":\\\"#ad1457\\\",\\\"pink-900\\\":\\\"#880e4f\\\",\\\"pink-a100\\\":\\\"#ff80ab\\\",\\\"pink-a200\\\":\\\"#ff4081\\\",\\\"pink-a400\\\":\\\"#f50057\\\",\\\"pink-a700\\\":\\\"#c51162\\\"},{\\\"purple-50\\\":\\\"#f3e5f5\\\",\\\"purple-100\\\":\\\"#e1bee7\\\",\\\"purple-200\\\":\\\"#ce93d8\\\",\\\"purple-300\\\":\\\"#ba68c8\\\",\\\"purple-400\\\":\\\"#ab47bc\\\",\\\"purple-500\\\":\\\"#9c27b0\\\",\\\"purple-600\\\":\\\"#8e24aa\\\",\\\"purple-700\\\":\\\"#7b1fa2\\\",\\\"purple-800\\\":\\\"#6a1b9a\\\",\\\"purple-900\\\":\\\"#4a148c\\\",\\\"purple-a100\\\":\\\"#ea80fc\\\",\\\"purple-a200\\\":\\\"#e040fb\\\",\\\"purple-a400\\\":\\\"#d500f9\\\",\\\"purple-a700\\\":\\\"#aa00ff\\\"},{\\\"deep-purple-50\\\":\\\"#ede7f6\\\",\\\"deep-purple-100\\\":\\\"#d1c4e9\\\",\\\"deep-purple-200\\\":\\\"#b39ddb\\\",\\\"deep-purple-300\\\":\\\"#9575cd\\\",\\\"deep-purple-400\\\":\\\"#7e57c2\\\",\\\"deep-purple-500\\\":\\\"#673ab7\\\",\\\"deep-purple-600\\\":\\\"#5e35b1\\\",\\\"deep-purple-700\\\":\\\"#512da8\\\",\\\"deep-purple-800\\\":\\\"#4527a0\\\",\\\"deep-purple-900\\\":\\\"#311b92\\\",\\\"deep-purple-a100\\\":\\\"#b388ff\\\",\\\"deep-purple-a200\\\":\\\"#7c4dff\\\",\\\"deep-purple-a400\\\":\\\"#651fff\\\",\\\"deep-purple-a700\\\":\\\"#6200ea\\\"},{\\\"indigo-50\\\":\\\"#e8eaf6\\\",\\\"indigo-100\\\":\\\"#c5cae9\\\",\\\"indigo-200\\\":\\\"#9fa8da\\\",\\\"indigo-300\\\":\\\"#7986cb\\\",\\\"indigo-400\\\":\\\"#5c6bc0\\\",\\\"indigo-500\\\":\\\"#3f51b5\\\",\\\"indigo-600\\\":\\\"#3949ab\\\",\\\"indigo-700\\\":\\\"#303f9f\\\",\\\"indigo-800\\\":\\\"#283593\\\",\\\"indigo-900\\\":\\\"#1a237e\\\",\\\"indigo-a100\\\":\\\"#8c9eff\\\",\\\"indigo-a200\\\":\\\"#536dfe\\\",\\\"indigo-a400\\\":\\\"#3d5afe\\\",\\\"indigo-a700\\\":\\\"#304ffe\\\"},{\\\"blue-50\\\":\\\"#e3f2fd\\\",\\\"blue-100\\\":\\\"#bbdefb\\\",\\\"blue-200\\\":\\\"#90caf9\\\",\\\"blue-300\\\":\\\"#64b5f6\\\",\\\"blue-400\\\":\\\"#42a5f5\\\",\\\"blue-500\\\":\\\"#2196f3\\\",\\\"blue-600\\\":\\\"#1e88e5\\\",\\\"blue-700\\\":\\\"#1976d2\\\",\\\"blue-800\\\":\\\"#1565c0\\\",\\\"blue-900\\\":\\\"#0d47a1\\\",\\\"blue-a100\\\":\\\"#82b1ff\\\",\\\"blue-a200\\\":\\\"#448aff\\\",\\\"blue-a400\\\":\\\"#2979ff\\\",\\\"blue-a700\\\":\\\"#2962ff\\\"},{\\\"light-blue-50\\\":\\\"#e1f5fe\\\",\\\"light-blue-100\\\":\\\"#b3e5fc\\\",\\\"light-blue-200\\\":\\\"#81d4fa\\\",\\\"light-blue-300\\\":\\\"#4fc3f7\\\",\\\"light-blue-400\\\":\\\"#29b6f6\\\",\\\"light-blue-500\\\":\\\"#03a9f4\\\",\\\"light-blue-600\\\":\\\"#039be5\\\",\\\"light-blue-700\\\":\\\"#0288d1\\\",\\\"light-blue-800\\\":\\\"#0277bd\\\",\\\"light-blue-900\\\":\\\"#01579b\\\",\\\"light-blue-a100\\\":\\\"#80d8ff\\\",\\\"light-blue-a200\\\":\\\"#40c4ff\\\",\\\"light-blue-a400\\\":\\\"#00b0ff\\\",\\\"light-blue-a700\\\":\\\"#0091ea\\\"},{\\\"cyan-50\\\":\\\"#e0f7fa\\\",\\\"cyan-100\\\":\\\"#b2ebf2\\\",\\\"cyan-200\\\":\\\"#80deea\\\",\\\"cyan-300\\\":\\\"#4dd0e1\\\",\\\"cyan-400\\\":\\\"#26c6da\\\",\\\"cyan-500\\\":\\\"#00bcd4\\\",\\\"cyan-600\\\":\\\"#00acc1\\\",\\\"cyan-700\\\":\\\"#0097a7\\\",\\\"cyan-800\\\":\\\"#00838f\\\",\\\"cyan-900\\\":\\\"#006064\\\",\\\"cyan-a100\\\":\\\"#84ffff\\\",\\\"cyan-a200\\\":\\\"#18ffff\\\",\\\"cyan-a400\\\":\\\"#00e5ff\\\",\\\"cyan-a700\\\":\\\"#00b8d4\\\"},{\\\"teal-50\\\":\\\"#e0f2f1\\\",\\\"teal-100\\\":\\\"#b2dfdb\\\",\\\"teal-200\\\":\\\"#80cbc4\\\",\\\"teal-300\\\":\\\"#4db6ac\\\",\\\"teal-400\\\":\\\"#26a69a\\\",\\\"teal-500\\\":\\\"#009688\\\",\\\"teal-600\\\":\\\"#00897b\\\",\\\"teal-700\\\":\\\"#00796b\\\",\\\"teal-800\\\":\\\"#00695c\\\",\\\"teal-900\\\":\\\"#004d40\\\",\\\"teal-a100\\\":\\\"#a7ffeb\\\",\\\"teal-a200\\\":\\\"#64ffda\\\",\\\"teal-a400\\\":\\\"#1de9b6\\\",\\\"teal-a700\\\":\\\"#00bfa5\\\"},{\\\"green-50\\\":\\\"#e8f5e9\\\",\\\"green-100\\\":\\\"#c8e6c9\\\",\\\"green-200\\\":\\\"#a5d6a7\\\",\\\"green-300\\\":\\\"#81c784\\\",\\\"green-400\\\":\\\"#66bb6a\\\",\\\"green-500\\\":\\\"#4caf50\\\",\\\"green-600\\\":\\\"#43a047\\\",\\\"green-700\\\":\\\"#388e3c\\\",\\\"green-800\\\":\\\"#2e7d32\\\",\\\"green-900\\\":\\\"#1b5e20\\\",\\\"green-a100\\\":\\\"#b9f6ca\\\",\\\"green-a200\\\":\\\"#69f0ae\\\",\\\"green-a400\\\":\\\"#00e676\\\",\\\"green-a700\\\":\\\"#00c853\\\"},{\\\"light-green-50\\\":\\\"#f1f8e9\\\",\\\"light-green-100\\\":\\\"#dcedc8\\\",\\\"light-green-200\\\":\\\"#c5e1a5\\\",\\\"light-green-300\\\":\\\"#aed581\\\",\\\"light-green-400\\\":\\\"#9ccc65\\\",\\\"light-green-500\\\":\\\"#8bc34a\\\",\\\"light-green-600\\\":\\\"#7cb342\\\",\\\"light-green-700\\\":\\\"#689f38\\\",\\\"light-green-800\\\":\\\"#558b2f\\\",\\\"light-green-900\\\":\\\"#33691e\\\",\\\"light-green-a100\\\":\\\"#ccff90\\\",\\\"light-green-a200\\\":\\\"#b2ff59\\\",\\\"light-green-a400\\\":\\\"#76ff03\\\",\\\"light-green-a700\\\":\\\"#64dd17\\\"},{\\\"lime-50\\\":\\\"#f9fbe7\\\",\\\"lime-100\\\":\\\"#f0f4c3\\\",\\\"lime-200\\\":\\\"#e6ee9c\\\",\\\"lime-300\\\":\\\"#dce775\\\",\\\"lime-400\\\":\\\"#d4e157\\\",\\\"lime-500\\\":\\\"#cddc39\\\",\\\"lime-600\\\":\\\"#c0ca33\\\",\\\"lime-700\\\":\\\"#afb42b\\\",\\\"lime-800\\\":\\\"#9e9d24\\\",\\\"lime-900\\\":\\\"#827717\\\",\\\"lime-a100\\\":\\\"#f4ff81\\\",\\\"lime-a200\\\":\\\"#eeff41\\\",\\\"lime-a400\\\":\\\"#c6ff00\\\",\\\"lime-a700\\\":\\\"#aeea00\\\",\\\"yellow-50\\\":\\\"#fffde7\\\"},{\\\"yellow-100\\\":\\\"#fff9c4\\\",\\\"yellow-200\\\":\\\"#fff59d\\\",\\\"yellow-300\\\":\\\"#fff176\\\",\\\"yellow-400\\\":\\\"#ffee58\\\",\\\"yellow-500\\\":\\\"#ffeb3b\\\",\\\"yellow-600\\\":\\\"#fdd835\\\",\\\"yellow-700\\\":\\\"#fbc02d\\\",\\\"yellow-800\\\":\\\"#f9a825\\\",\\\"yellow-900\\\":\\\"#f57f17\\\",\\\"yellow-a100\\\":\\\"#ffff8d\\\",\\\"yellow-a200\\\":\\\"#ffff00\\\",\\\"yellow-a400\\\":\\\"#ffea00\\\",\\\"yellow-a700\\\":\\\"#ffd600\\\"},{\\\"amber-50\\\":\\\"#fff8e1\\\",\\\"amber-100\\\":\\\"#ffecb3\\\",\\\"amber-200\\\":\\\"#ffe082\\\",\\\"amber-300\\\":\\\"#ffd54f\\\",\\\"amber-400\\\":\\\"#ffca28\\\",\\\"amber-500\\\":\\\"#ffc107\\\",\\\"amber-600\\\":\\\"#ffb300\\\",\\\"amber-700\\\":\\\"#ffa000\\\",\\\"amber-800\\\":\\\"#ff8f00\\\",\\\"amber-900\\\":\\\"#ff6f00\\\",\\\"amber-a100\\\":\\\"#ffe57f\\\",\\\"amber-a200\\\":\\\"#ffd740\\\",\\\"amber-a400\\\":\\\"#ffc400\\\",\\\"amber-a700\\\":\\\"#ffab00\\\"},{\\\"orange-50\\\":\\\"#fff3e0\\\",\\\"orange-100\\\":\\\"#ffe0b2\\\",\\\"orange-200\\\":\\\"#ffcc80\\\",\\\"orange-300\\\":\\\"#ffb74d\\\",\\\"orange-400\\\":\\\"#ffa726\\\",\\\"orange-500\\\":\\\"#ff9800\\\",\\\"orange-600\\\":\\\"#fb8c00\\\",\\\"orange-700\\\":\\\"#f57c00\\\",\\\"orange-800\\\":\\\"#ef6c00\\\",\\\"orange-900\\\":\\\"#e65100\\\",\\\"orange-a100\\\":\\\"#ffd180\\\",\\\"orange-a200\\\":\\\"#ffab40\\\",\\\"orange-a400\\\":\\\"#ff9100\\\",\\\"orange-a700\\\":\\\"#ff6d00\\\"},{\\\"deep-orange-50\\\":\\\"#fbe9e7\\\",\\\"deep-orange-100\\\":\\\"#ffccbc\\\",\\\"deep-orange-200\\\":\\\"#ffab91\\\",\\\"deep-orange-300\\\":\\\"#ff8a65\\\",\\\"deep-orange-400\\\":\\\"#ff7043\\\",\\\"deep-orange-500\\\":\\\"#ff5722\\\",\\\"deep-orange-600\\\":\\\"#f4511e\\\",\\\"deep-orange-700\\\":\\\"#e64a19\\\",\\\"deep-orange-800\\\":\\\"#d84315\\\",\\\"deep-orange-900\\\":\\\"#bf360c\\\",\\\"deep-orange-a100\\\":\\\"#ff9e80\\\",\\\"deep-orange-a200\\\":\\\"#ff6e40\\\",\\\"deep-orange-a400\\\":\\\"#ff3d00\\\",\\\"deep-orange-a700\\\":\\\"#dd2c00\\\"},{\\\"brown-50\\\":\\\"#efebe9\\\",\\\"brown-100\\\":\\\"#d7ccc8\\\",\\\"brown-200\\\":\\\"#bcaaa4\\\",\\\"brown-300\\\":\\\"#a1887f\\\",\\\"brown-400\\\":\\\"#8d6e63\\\",\\\"brown-500\\\":\\\"#795548\\\",\\\"brown-600\\\":\\\"#6d4c41\\\",\\\"brown-700\\\":\\\"#5d4037\\\",\\\"brown-800\\\":\\\"#4e342e\\\",\\\"brown-900\\\":\\\"#3e2723\\\"},{\\\"grey-50\\\":\\\"#fafafa\\\",\\\"grey-100\\\":\\\"#f5f5f5\\\",\\\"grey-200\\\":\\\"#eeeeee\\\",\\\"grey-300\\\":\\\"#e0e0e0\\\",\\\"grey-400\\\":\\\"#bdbdbd\\\",\\\"grey-500\\\":\\\"#9e9e9e\\\",\\\"grey-600\\\":\\\"#757575\\\",\\\"grey-700\\\":\\\"#616161\\\",\\\"grey-800\\\":\\\"#424242\\\",\\\"grey-900\\\":\\\"#212121\\\"},{\\\"blue-grey-50\\\":\\\"#eceff1\\\",\\\"blue-grey-100\\\":\\\"#cfd8dc\\\",\\\"blue-grey-200\\\":\\\"#b0bec5\\\",\\\"blue-grey-300\\\":\\\"#90a4ae\\\",\\\"blue-grey-400\\\":\\\"#78909c\\\",\\\"blue-grey-500\\\":\\\"#607d8b\\\",\\\"blue-grey-600\\\":\\\"#546e7a\\\",\\\"blue-grey-700\\\":\\\"#455a64\\\",\\\"blue-grey-800\\\":\\\"#37474f\\\",\\\"blue-grey-900\\\":\\\"#263238\\\"},{\\\"dark-primary\\\":\\\"rgba(0, 0, 0, 0.87)\\\",\\\"dark-secondary\\\":\\\"rgba(0, 0, 0, 0.54)\\\",\\\"dark-disabled\\\":\\\"rgba(0, 0, 0, 0.38)\\\",\\\"dark-dividers\\\":\\\"rgba(0, 0, 0, 0.12)\\\",\\\"dark-icon-active\\\":\\\"rgba(0, 0, 0, 0.54)\\\",\\\"dark-icon-inactive\\\":\\\"rgba(0, 0, 0, 0.38)\\\"},{\\\"light-primary\\\":\\\"rgba(255, 255, 255, 1)\\\",\\\"light-secondary\\\":\\\"rgba(255, 255, 255, 0.7)\\\",\\\"light-disabled\\\":\\\"rgba(255, 255, 255, 0.5)\\\",\\\"light-dividers\\\":\\\"rgba(255, 255, 255, 0.12)\\\",\\\"light-icon-active\\\":\\\"rgba(255, 255, 255, 1)\\\",\\\"light-icon-inactive\\\":\\\"rgba(255, 255, 255, 0.5)\\\"},{\\\"white\\\":\\\"#ffffff\\\"},{\\\"black\\\":\\\"#000000\\\"}]}\");\n\n//# sourceURL=webpack://mdt-charts/./src/assets/materialColors.json?");

/***/ }),

/***/ "./src/config/configTest2D.json":
/*!**************************************!*\
  !*** ./src/config/configTest2D.json ***!
  \**************************************/
/***/ ((module) => {

eval("module.exports = JSON.parse(\"{\\\"canvas\\\":{\\\"class\\\":\\\"svg-chart-2\\\",\\\"size\\\":{\\\"width\\\":800,\\\"height\\\":400}},\\\"options\\\":{\\\"type\\\":\\\"2d\\\",\\\"isSegmented\\\":false,\\\"axis\\\":{\\\"keyAxis\\\":{\\\"position\\\":\\\"end\\\",\\\"ticks\\\":{\\\"flag\\\":false}},\\\"valueAxis\\\":{\\\"domain\\\":{\\\"start\\\":-1,\\\"end\\\":-1},\\\"position\\\":\\\"start\\\",\\\"ticks\\\":{\\\"flag\\\":false}}},\\\"additionalElements\\\":{\\\"gridLine\\\":{\\\"flag\\\":{\\\"value\\\":true,\\\"key\\\":true}}},\\\"legend\\\":{\\\"position\\\":\\\"top\\\"},\\\"orientation\\\":\\\"vertical\\\",\\\"charts\\\":[{\\\"title\\\":\\\"Рост стоимости\\\",\\\"type\\\":\\\"bar\\\",\\\"data\\\":{\\\"dataSource\\\":\\\"dataSet\\\",\\\"keyField\\\":{\\\"name\\\":\\\"brand\\\",\\\"format\\\":\\\"string\\\"},\\\"valueFields\\\":[{\\\"name\\\":\\\"count\\\",\\\"format\\\":\\\"integer\\\",\\\"title\\\":\\\"Количество автомобилей на душу населения\\\"}]},\\\"tooltip\\\":{\\\"data\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"price\\\",\\\"format\\\":\\\"money\\\"},{\\\"name\\\":\\\"count\\\",\\\"format\\\":\\\"integer\\\"}]}},\\\"embeddedLabels\\\":\\\"key\\\"},{\\\"title\\\":\\\"Рост продаж\\\",\\\"type\\\":\\\"line\\\",\\\"data\\\":{\\\"dataSource\\\":\\\"dataSet2\\\",\\\"keyField\\\":{\\\"name\\\":\\\"brand\\\",\\\"format\\\":\\\"string\\\"},\\\"valueFields\\\":[{\\\"name\\\":\\\"count\\\",\\\"format\\\":\\\"integer\\\",\\\"title\\\":\\\"Количество автомобилей на душу населения\\\"},{\\\"name\\\":\\\"price\\\",\\\"format\\\":\\\"integer\\\",\\\"title\\\":\\\"Цена автомобилей\\\"}]},\\\"tooltip\\\":{\\\"data\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"price\\\",\\\"format\\\":\\\"money\\\"},{\\\"name\\\":\\\"count\\\",\\\"format\\\":\\\"integer\\\"}]}},\\\"embeddedLabels\\\":\\\"key\\\"}]}}\");\n\n//# sourceURL=webpack://mdt-charts/./src/config/configTest2D.json?");

/***/ }),

/***/ "./src/config/configTestPolar.json":
/*!*****************************************!*\
  !*** ./src/config/configTestPolar.json ***!
  \*****************************************/
/***/ ((module) => {

eval("module.exports = JSON.parse(\"{\\\"canvas\\\":{\\\"class\\\":\\\"svg-chart-3\\\",\\\"size\\\":{\\\"width\\\":700,\\\"height\\\":400}},\\\"options\\\":{\\\"type\\\":\\\"polar\\\",\\\"legend\\\":{\\\"position\\\":\\\"top\\\"},\\\"charts\\\":[{\\\"title\\\":\\\"Рост стоимости\\\",\\\"type\\\":\\\"donut\\\",\\\"data\\\":{\\\"dataSource\\\":\\\"dataSet\\\",\\\"keyField\\\":{\\\"name\\\":\\\"brand\\\",\\\"format\\\":\\\"string\\\"},\\\"valueField\\\":{\\\"name\\\":\\\"price\\\",\\\"format\\\":\\\"money\\\"}},\\\"tooltip\\\":{\\\"data\\\":{\\\"fields\\\":[{\\\"name\\\":\\\"price\\\",\\\"format\\\":\\\"money\\\"},{\\\"name\\\":\\\"count\\\",\\\"format\\\":\\\"integer\\\"}]}}}]}}\");\n\n//# sourceURL=webpack://mdt-charts/./src/config/configTestPolar.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// the startup function
/******/ 	// It's empty as some runtime module handles the default behavior
/******/ 	__webpack_require__.x = x => {}
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// Promise = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"listeners": 0
/******/ 		};
/******/ 		
/******/ 		var deferredModules = [
/******/ 			["./src/listeners/listeners.ts","vendors-node_modules_css-loader_dist_runtime_api_js-node_modules_d3_index_js-node_modules_sty-ef83b8","src_engine_engine_ts"]
/******/ 		];
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		var checkDeferredModules = x => {};
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime, executeModules] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0, resolves = [];
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					resolves.push(installedChunks[chunkId][0]);
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			while(resolves.length) {
/******/ 				resolves.shift()();
/******/ 			}
/******/ 		
/******/ 			// add entry modules from loaded chunk to deferred list
/******/ 			if(executeModules) deferredModules.push.apply(deferredModules, executeModules);
/******/ 		
/******/ 			// run deferred modules when all chunks ready
/******/ 			return checkDeferredModules();
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkmdt_charts"] = self["webpackChunkmdt_charts"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 		
/******/ 		function checkDeferredModulesImpl() {
/******/ 			var result;
/******/ 			for(var i = 0; i < deferredModules.length; i++) {
/******/ 				var deferredModule = deferredModules[i];
/******/ 				var fulfilled = true;
/******/ 				for(var j = 1; j < deferredModule.length; j++) {
/******/ 					var depId = deferredModule[j];
/******/ 					if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferredModules.splice(i--, 1);
/******/ 					result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 				}
/******/ 			}
/******/ 			if(deferredModules.length === 0) {
/******/ 				__webpack_require__.x();
/******/ 				__webpack_require__.x = x => {};
/******/ 			}
/******/ 			return result;
/******/ 		}
/******/ 		var startup = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			// reset startup function so it can be called again when more startup code is added
/******/ 			__webpack_require__.x = startup || (x => {});
/******/ 			return (checkDeferredModules = checkDeferredModulesImpl)();
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// run startup
/******/ 	return __webpack_require__.x();
/******/ })()
;